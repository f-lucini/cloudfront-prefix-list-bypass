Parameters:
  HostHeader:
    Type: String
    Description: 'Website DNS name expected by the origin'
  OriginDomain:
    Type: String
    Description: 'Custom DNS record pointing to the origin'
  Protocol:
    Type: String
    Default: match-viewer
    AllowedValues:
      - http-only
      - https-only
      - match-viewer
    Description: '(Optional) Protocol to use to connect to the origin'
  AllowedCIDR:
    Type: String
    Default: ''
    Description: '(Optional) CIDR allowed to access CloudFront via AWS WAF.'

Conditions:
  CreateWAF: !Not [!Equals [!Ref AllowedCIDR, '']]

Resources:
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Comment: !Ref HostHeader
        Logging:
          IncludeCookies: false
          Bucket: ''
          Prefix: ''
        DefaultRootObject: ''
        Origins:
          - ConnectionTimeout: 10
            OriginAccessControlId: ''
            ConnectionAttempts: 3
            OriginCustomHeaders:
              - HeaderName: 'sethost'
                HeaderValue: !Ref HostHeader
            DomainName: !Ref OriginDomain
            OriginShield:
              Enabled: false
            OriginPath: ''
            Id: !Ref OriginDomain
            CustomOriginConfig:
              OriginKeepaliveTimeout: 5
              OriginReadTimeout: 30
              OriginSSLProtocols:
                - TLSv1.2
              HTTPSPort: 443
              HTTPPort: 80
              OriginProtocolPolicy: !Ref Protocol
        PriceClass: PriceClass_100
        DefaultCacheBehavior:
          Compress: true
          ForwardedValues:
              Cookies:
                  Forward: all
              Headers: ["*"]
              QueryString: True
          FunctionAssociations: []
          LambdaFunctionAssociations:
            - EventType: origin-request
              IncludeBody: false
              LambdaFunctionARN: {'Fn::ImportValue': 'sethost-lambda-version-arn' }
          TargetOriginId: !Ref OriginDomain
          ViewerProtocolPolicy: allow-all
          TrustedSigners: []
          FieldLevelEncryptionId: ''
          TrustedKeyGroups: []
          AllowedMethods:
            - HEAD
            - DELETE
            - POST
            - GET
            - OPTIONS
            - PUT
            - PATCH
          CachedMethods:
            - HEAD
            - GET
          SmoothStreaming: false
        Staging: false
        CustomErrorResponses: []
        ContinuousDeploymentPolicyId: ''
        OriginGroups:
          Quantity: 0
          Items: []
        Enabled: true
        Aliases: []
        IPV6Enabled: true
        WebACLId: !If 
          - CreateWAF
          - !GetAtt WAFWebACL.Arn
          - !Ref 'AWS::NoValue'
        HttpVersion: http2
        Restrictions:
          GeoRestriction:
            Locations: []
            RestrictionType: none
        CacheBehaviors: []

  WAFIPSet:
    Type: 'AWS::WAFv2::IPSet'
    Condition: CreateWAF
    Properties:
      Name: !Sub '${AWS::StackName}-allowed-cidr'
      Description: 'IP Set for allowed CIDR'
      Scope: CLOUDFRONT
      IPAddressVersion: IPV4
      Addresses: 
        - !Ref AllowedCIDR

  WAFWebACL:
    Type: 'AWS::WAFv2::WebACL'
    Condition: CreateWAF
    Properties:
      Name: !Sub '${AWS::StackName}-waf'
      Description: 'WebACL to restrict CloudFront access'
      Scope: CLOUDFRONT
      DefaultAction:
        Block: {}
      Rules:
        - Name: AllowCIDR
          Priority: 1
          Statement:
            IPSetReferenceStatement:
              Arn: !GetAtt WAFIPSet.Arn
          Action:
            Allow: {}
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: AllowCIDRRule
      VisibilityConfig:
        SampledRequestsEnabled: true
        CloudWatchMetricsEnabled: true
        MetricName: !Sub '${AWS::StackName}-waf'

Outputs:
  CloudfrontDistributionDomainName:
    Description: The Domain Name of the Cloudfront distribution
    Value: !GetAtt CloudFrontDistribution.DomainName